#include <stdio.h>
#include <math.h>
#include <stdbool.h>

void calculateCompoundInterest(double r, int p, int n);

int main(){

    double principal = 0;
    int years = 0, rate = 0;
    scanf("%lf %d %d", &principal, &years, &rate);

    calculateCompoundInterest(principal, rate, years);

    return 0;
}


void calculateCompoundInterest(double principal, int rate, int years){
    int startRate = rate;
    int principalArray[30], tempArray[30], rateTimes1000 = floor(principal * 1000);


    for (int i = 0; i < 30; i++){
        if (i >= 0 && i < 11)
            principalArray[i] = 0;
        else {
            principalArray[i] = rate % 10;
            rate /= 10;
        }
        tempArray[i] = 0;
    }

    for (int k = 0; k < years; k++){
        // p = p * r
        for (int i = 0; i < 30; i++){
            tempArray[i] += principalArray[i] * rateTimes1000;
        }

        // 整數進位
        for (int i = 0; i < 30; i++){
            tempArray[i + 1] += tempArray[i] / 10;
            tempArray[i] %= 10;
        }

        // 整數移位
        for (int i = 3; i < 30; i++){
            tempArray[i - 3] = tempArray[i];
        }

        // p += p
        for (int i = 0; i < 30; i++){
            tempArray[i] += principalArray[i];
        }

        // 整數進位
        for (int i = 0; i < 30; i++){
            tempArray[i + 1] += tempArray[i] / 10;
            tempArray[i] %= 10;
        }

        // 是否繼續計算複利
        if (k == years - 1){
            bool outputEmpty = false;
            // 尋找首個非零值並輸出之後的零
            for (int i = 29; i >= 11; i--){
                if (tempArray[i] != 0 || outputEmpty != false){
                    outputEmpty = true;
                    printf("%d", tempArray[i]);
                    if (i == 11)
                        printf("\n");
                }
                else
                    continue;
            }
        } else {
            tempArray[11] += startRate;
            // 更新 principalArray
            for (int i = 0; i < 30; i++){
                principalArray[i] = tempArray[i];
                tempArray[i] = 0;
            }
        }
    }
}
